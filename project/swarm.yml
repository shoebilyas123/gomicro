version: '3'

services:
  caddysvc:
    image: this888dockerkde/caddysvc:1.0.1
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - 8000:8000
      - 443:443
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  frontendsvc:
    image: this888dockerkde/frontendsvc:1.0.1
    deploy:
      mode: replicated
      replicas: 1

  brokersvc:
    image: this888dockerkde/brokersvc:1.0.2
    deploy:
      mode: replicated
      replicas: 1

  listenersvc:
    image: this888dockerkde/listenersvc:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  authsvc:
    image: this888dockerkde/authsvc:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: 'host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5'

  logsvc:
    image: this888dockerkde/logsvc:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: 'host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5'

  mailsvc:
    image: this888dockerkde/mailsvc:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ''
      MAIL_PASSWORD: ''
      MAIL_FROM_NAME: 'John Smith'
      MAIL_FROM_ADDRESS: 'john.smith@example.com'

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - '27017:27017'
    deploy:
      mode: global
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo:/data/db

  postgres:
    image: 'postgres:14.2'
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres:/var/lib/postgresql/data/

  rabbitmq:
    image: 'rabbitmq:3.12.14-alpine'
    deploy:
      mode: global

  mailhog:
    image: 'mailhog/mailhog:latest'
    deploy:
      mode: global
    ports:
      - '8025:8025'

volumes:
  caddy_data:
    external: true
  caddy_config:
